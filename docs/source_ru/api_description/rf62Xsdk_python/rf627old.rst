
.. _rf62x_wrappers_description_python_rf627old:

.. |pydll| replace:: rf62Xsdk.dll
.. |PYSDK| replace:: PYSDK.py
.. |PYSDK_functions| replace:: PYSDK_functions.py
.. |PYCLASS| replace:: rf627old

*******************************************************************************
Класс rf627_device
*******************************************************************************

Данный класс определён в файле |PYSDK| и предоставляет интерфейс 
для работы со сканерами cерии RF62X


__init__()
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Конструктор

__str__()
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Представить информацию об объекте в виде строки, удобной для чтения

connect_to_scanner()
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Функция для установки соединения со сканером


disconnect_from_scanner()
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Функция для закрытия ранее установленного соединения со сканером серии RF62X


get_profile2D_from_scanner()
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Функция для получения профиля со сканеров серии RF62X

get_info_about_scanner()
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Функция для получения информации о сканере из пакета приветствия (Hello-пакет)

get_parameter()
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Функция получения конкретного параметра по его имени. При вызове 
данной функции «ядро» осуществляет поиск нужного параметра из последних прочитанных 
при вызове функции :ref:`read_params_from_scanner`. В случае, если запрашиваемый 
параметр отсутствует в конкретном сканере, функция вернёт None.

Для более удобной работы с параметрами можно использовать соответствующие «ключи» 
(ключ имени параметра, тип параметра и доступ к параметру). Для этого в файле 
|PYSDK| находятся следующие ``enum``:

set_parameter()
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Функция установки конкретного параметра. 
Новое значение new_value может быть задано двумя способами.
Способ 1: новое значение передется в виде переменной variable типа (dict) с измененным полем value
 ( variable['value']=new_value )
Способ 2: новое значение передется в виде значения (variable=new_value), однако, при этом должен быть передан 
второй параметр - имя («ключ») изменяемого параметра. Для более удобной работы с параметрами можно использовать соответствующие «ключи» 
(ключ имени параметра, тип параметра и доступ к параметру). Для этого в файле 
|PYSDK| находятся следующие ``enum``:

    
При вызове данной функции происходит установка 
передаваемого параметра в локальном списке параметров в «ядре». Для отправки изменений 
в сканер необходимо вызвать функцию ``write_params_to_scanner``.


read_params_from_scanner()
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Функция получения текущих параметров сканера. При вызове данной функции «ядро» вычитывает 
со сканера все актуальные параметры, сохраняя их ввиде «списка параметров» для дальнейшей 
работы.


write_params_to_scanner()
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Функция записи локальных параметров из «ядра» в сканер. При вызове данной функции 
происходит отправка списка локальных параметров из «ядра» в сканер.


TODO send_cmd()
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

Функция отправки команд в сканер

Для более детального описания команд и их свойств см. :ref:`rf62x_more_description_commands`